{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Dialexa Python Cookiecutter Cookiecutter template for a Python package, built with popular develop tools and conform to best practice. Features This template will create a Python project with the following features: Poetry : Manage dependency, build and release Mkdocs : Writing your docs in markdown style Testing with Pytest (unittest is still supported out of the box) Code coverage report and endorsed by Codecov Format with Black and Isort Lint code with Flake8 and Flake8-docstrings Check static type with Mypy (optional) Pre-commit hooks : Formatting/linting anytime when commit your code Mkdocstrings : Auto API doc generation Command line interface using Click (optional) Pyinvoke : Pythonic task runner as an alternative to makefiles Continuous Integration/Deployment by GitHub actions , includes: publish dev build/official release to TestPyPI/PyPI automatically when CI success publish documents automatically when CI success extract changelog from CHANGELOG and integrate with release notes automatically Host your documentation from GitHub Pages with zero-config Quickstart Install the latest Cookiecutter if you haven't installed it yet (this requires Cookiecutter 1.4.0 or higher): pip install -U cookiecutter Generate a Python package project: cookiecutter https://github.com/datanrd/dialexa-python-cookiecutter.git Then follow Tutorial to finish other configurations.","title":"Introduction"},{"location":"#dialexa-python-cookiecutter","text":"Cookiecutter template for a Python package, built with popular develop tools and conform to best practice.","title":"Dialexa Python Cookiecutter"},{"location":"#features","text":"This template will create a Python project with the following features: Poetry : Manage dependency, build and release Mkdocs : Writing your docs in markdown style Testing with Pytest (unittest is still supported out of the box) Code coverage report and endorsed by Codecov Format with Black and Isort Lint code with Flake8 and Flake8-docstrings Check static type with Mypy (optional) Pre-commit hooks : Formatting/linting anytime when commit your code Mkdocstrings : Auto API doc generation Command line interface using Click (optional) Pyinvoke : Pythonic task runner as an alternative to makefiles Continuous Integration/Deployment by GitHub actions , includes: publish dev build/official release to TestPyPI/PyPI automatically when CI success publish documents automatically when CI success extract changelog from CHANGELOG and integrate with release notes automatically Host your documentation from GitHub Pages with zero-config","title":"Features"},{"location":"#quickstart","text":"Install the latest Cookiecutter if you haven't installed it yet (this requires Cookiecutter 1.4.0 or higher): pip install -U cookiecutter Generate a Python package project: cookiecutter https://github.com/datanrd/dialexa-python-cookiecutter.git Then follow Tutorial to finish other configurations.","title":"Quickstart"}]}